{"version":3,"sources":["components/Message.jsx","components/ChatHeader.jsx","axios.js","components/ChatFooter.jsx","components/Chat.jsx","components/SidebarChat.jsx","components/AddNewChat.jsx","firebase.js","components/Sidebar.jsx","StateProvider.js","reducer.js","components/Login.jsx","App.js","serviceWorker.js","index.js","images/blackClover.png"],"names":["Message","message","userValue","deleteState","addDeleted","removeDeleted","useState","deletedItemId","setDeletedItemId","checked","setChecked","useEffect","time","Date","createdAt","className","displayName","name","Checkbox","size","checkedIcon","inputProps","value","_id","onChange","event","target","getDay","toLocaleString","slice","toLocaleTimeString","ChatHeader","chatName","messages","handleDelete","searchedMessage","seed","setSeed","lastSeen","setLastSeen","searchBarInitiated","setSearchBarInitiated","searchChat","setSearchChat","submitSearch","e","preventDefault","Math","floor","random","prevState","undefined","length","Avatar","src","ClickAwayListener","onClickAway","onSubmit","IconButton","onClick","SearchOutlined","type","toLowerCase","autoFocus","instance","axios","create","baseURL","useStyles","makeStyles","theme","button","marginLeft","ChatFooter","classes","setMessage","handleSubmit","a","stringMessage","toString","replace","console","log","post","then","res","data","emojiClicked","setEmojiClicked","onEmojiClick","emojiObject","emoji","disableSearchBar","placeholder","Button","variant","endIcon","Icon","grammar","onDictate","result","alert","transcript","confidence","onProgress","onError","Chat","chatId","useParams","setChatName","setDeleteState","deletedItemsIds","setDeletedItemsIds","get","catch","err","setMessages","addDeletedItems","item","removesDeletedItems","filter","id","channel","Pusher","cluster","subscribe","bind","prevMessages","unbind_all","unsubscribe","document","querySelector","scrollTop","scrollHeight","searchInitiated","setSearchInitiated","messageSearch","setMessageSearch","color","startIcon","map","index","includes","key","SidebarChat","deleteChat","showEditChat","editState","setEditState","editChat","setEditChat","open","setOpen","handleClose","submitEdit","patch","oldChatName","newChatName","filteredData","to","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","delete","AddNewChat","addChat","chat","setChat","roomName","prompt","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","providerGoogle","GoogleAuthProvider","Sidebar","chats","setChats","editedChat","setEditedChat","deletedId","prevChats","photoURL","alt","signOut","window","location","newChat","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","actionTypes","state","action","user","Login","getUser","useContext","dispatch","onAuthStateChanged","logo","signInWithPopup","App","setUser","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"mXAmEeA,MA9Df,YAMI,IALFC,EAKC,EALDA,QACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,WACAC,EACC,EADDA,cACC,EAGyCC,mBAAS,IAHlD,mBAGMC,EAHN,KAGqBC,EAHrB,OAI6BF,oBAAS,GAJtC,mBAIMG,EAJN,KAIeC,EAJf,KAMDC,qBAAU,WACHR,IACHK,EAAiB,IACjBE,GAAW,MAEZ,CAACH,EAAeJ,IAanB,IAAIS,EAAO,IAAIC,KAAKZ,EAAQa,WAE5B,OAGE,uBACEC,UAAS,wBACE,OAATb,QAAS,IAATA,OAAA,EAAAA,EAAWc,eAAgBf,EAAQgB,MAAQ,mBAGnC,OAATf,QAAS,IAATA,OAAA,EAAAA,EAAWc,eAAgBf,EAAQgB,MAAQd,GAC1C,kBAACe,EAAA,EAAD,CACEH,WAAYN,GAAW,kBACvBU,KAAK,QACLC,YAAa,kBAAC,IAAD,MACbC,WAAY,CAAE,aAAc,yBAC5BC,MAAOrB,EAAQsB,IACfd,QAASA,EACTe,SA7BR,SAAqBC,GAAQ,IAAD,EACCA,EAAMC,OAAzBJ,EADkB,EAClBA,MAAOb,EADW,EACXA,QACfC,EAAWD,GACPA,GACFD,EAAiBc,GACjBlB,EAAWkB,KAEXjB,EAAciB,GACdd,EAAiB,QAwBjB,0BAAMO,UAAU,aAAad,EAAQgB,MACpChB,EAAQA,QACT,0BAAMc,UAAU,kBACbH,EAAKe,YAAa,IAAId,MAAOc,SAC1Bf,EAAKgB,iBAAiBC,MAAM,GAAI,GAChCjB,EAAKkB,qBAAqBD,MAAM,GAAI,M,qDCmCjCE,MAzFf,YAA4E,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAAmB,EAEjD7B,mBAAS,IAFwC,mBAElE8B,EAFkE,KAE5DC,EAF4D,OAGzC/B,mBAAS,OAHgC,mBAGlEgC,EAHkE,KAGxDC,EAHwD,OAKrBjC,oBAAS,GALY,mBAKlEkC,EALkE,KAK9CC,EAL8C,OAMrCnC,mBAAS,IAN4B,mBAMlEoC,EANkE,KAMtDC,EANsD,KA+BzE,SAASC,EAAaC,GAEpBA,EAAEC,iBACFX,EAAgBO,GAAY,GAG9B,OA7BA/B,qBAAU,WACR0B,EAAQU,KAAKC,MAAsB,IAAhBD,KAAKE,WACxBV,GAAY,SAACW,GACX,QAAiBC,IAAblB,GAA8C,IAApBA,EAASmB,OACrC,OAAOF,EAEP,IAAMtC,EAAO,IAAIC,KAAKoB,EAASA,EAASmB,OAAS,GAAGtC,WACpD,OAAOF,EAAKe,YAAa,IAAId,MAAOc,SAChCf,EAAKgB,iBAAiBC,MAAM,GAAI,GAChCjB,EAAKkB,qBAAqBD,MAAM,GAAI,QAG3C,CAACG,EAAUC,IAkBZ,yBAAKlB,UAAU,eACb,kBAACsC,EAAA,EAAD,CAAQC,IAAG,iDAA4ClB,EAA5C,UAEX,yBAAKrB,UAAU,oBACb,4BAAKiB,GACL,2CAAiBM,IAGnB,yBAAKvB,UAAU,qBACZyB,EACC,kBAACe,EAAA,EAAD,CACEC,YAAa,WACXf,GAAsB,GACtBE,EAAc,IACdR,EAAgBO,GAAY,KAG9B,0BAAMe,SAAUb,GACd,yBAAK7B,UAAU,4BACb,kBAAC2C,EAAA,EAAD,CAAYC,QAASf,GACnB,kBAACgB,EAAA,EAAD,OAEF,2BACEC,KAAK,OACLrC,SApCK,SAACC,GAAW,IACvBH,EAAUG,EAAMC,OAAhBJ,MACRqB,EAAcrB,EAAMwC,gBAmCNxC,MAAOoB,EACPqB,WAAS,OAMjB,yBAAKhD,UAAU,qBACb,kBAAC2C,EAAA,EAAD,CAAYC,QAjDtB,WACElB,GAAuBD,KAiDb,kBAACoB,EAAA,EAAD,OAGF,kBAACF,EAAA,EAAD,CACEC,QAAS,WACPzB,MAGF,kBAAC,IAAD,W,qECjFC8B,E,OAJEC,EAAMC,OAAO,CAE5BC,QAAS,2C,kCCQLC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,WAAY,YAqGDC,MAlGf,YAA8C,IAAxBzC,EAAuB,EAAvBA,SAAU9B,EAAa,EAAbA,UAIxBwE,EAAUN,IAJ2B,EAKb9D,mBAAS,IALI,mBAKpCL,EALoC,KAK3B0E,EAL2B,KAYrCC,EAAY,uCAAG,WAAOnD,GAAP,eAAAoD,EAAA,6DACnBpD,EAAMqB,iBAENgC,GADIA,EAAgB7E,EAAQ8E,YACEC,QAAQ,IAAK,KAC3CC,QAAQC,IAAIJ,GAJO,SAKbb,EACHkB,KAAK,gBAAiB,CACrBlE,KAAI,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAWc,YACjBf,QAAS6E,EACT9C,SAAUA,IAEXoD,MAAK,SAACC,GAAD,OAASJ,QAAQC,IAAIG,EAAIC,SAXd,OAanBX,EAAW,IAbQ,2CAAH,sDAZyB,EA4BHrE,oBAAS,GA5BN,mBA4BpCiF,EA5BoC,KA4BtBC,EA5BsB,KAyD3C,OACE,yBAAKzE,UAAU,eACb,kBAAC2C,EAAA,EAAD,CAAYC,QAAS,kBAAM6B,GAAiBD,KAC1C,kBAAC,IAAD,OAEDA,GACC,kBAAC,IAAD,CAAQE,aAhCO,SAAChE,EAAOiE,GAC3Bf,GAAW,SAACzB,GACV,OAAOA,EAAY,IAAMwC,EAAYC,MAAQ,QA8BPC,iBAAiB,SAEvD,8BACE,2BACE/B,KAAK,OACLgC,YAAY,iBACZrE,SA9Da,SAACC,GACpB,IAAOH,EAASG,EAAMC,OAAOJ,MAC7BqD,EAAWrD,IA6DLA,MAAOrB,IAGT,kBAAC6F,EAAA,EAAD,CACEC,QAAQ,WAER5E,KAAK,QACLJ,UAAW2D,EAAQH,OACnByB,QAAS,kBAACC,EAAA,EAAD,aACTpC,KAAK,SACLF,QAASiB,GAPX,SAYF,kBAAC,IAAD,CACE7D,UAAU,oBACVmF,QAAQ,2EACRC,UAnDgB,SAAC,GAEhB,IADGC,EACJ,EADJA,YAEejD,IAAXiD,GACFnB,QAAQC,WAAWkB,GACnBC,MAAM,qCAEJ1B,EAAU,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAQE,YACvBrB,QAAQC,IAAR,OAAYkB,QAAZ,IAAYA,OAAZ,EAAYA,EAAQG,cA4ChBC,WAvCiB,aAwCjBC,QArCc,SAAChF,GACnBwD,QAAQC,IAAIzD,KAsCR,kBAAC,IAAD,S,yCC4EOiF,MA9Kf,YAA8B,IAAdxG,EAAa,EAAbA,UAENyG,EAAWC,cAAXD,OAFmB,EAGKrG,mBAAS,IAHd,mBAGpB0B,EAHoB,KAGV6E,EAHU,OAIWvG,oBAAS,GAJpB,mBAIpBH,EAJoB,KAIP2G,EAJO,OAKmBxG,mBAAS,IAL5B,mBAKpByG,EALoB,KAKHC,EALG,KAM3BrG,qBAAU,WACJgG,GAEF1C,EACGgD,IAAI,cAAgBN,GACpBvB,MAAK,SAACC,GACLwB,EAAYxB,EAAIC,KAAKrE,SAEtBiG,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,QAGjB,CAACR,IAlBuB,MAoBKrG,mBAAS,IApBd,mBAoBpB2B,EApBoB,KAoBVmF,EApBU,KA2E3B,SAASC,EAAgBC,GACvBN,GAAmB,SAAC9D,GAClB,MAAM,GAAN,mBAAWA,GAAX,CAAsBoE,OAG1B,SAASC,EAAoBD,GAC3BN,GAAmB,SAAC9D,GAClB,OAAOA,EAAUsE,QAAO,SAACC,GACvB,OAAOH,IAASG,QAnFK,4CAwF3B,sBAAA5C,EAAA,6DACEI,QAAQC,IAAI6B,GADd,SAEQ9C,EACHkB,KAAK,mBAAoB4B,GACzB3B,MAAK,SAACC,GACLJ,QAAQC,IAAIG,GACZyB,GAAe,GACfE,EAAmB,OAEpBE,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,GACZd,MAAM,uCACNS,GAAe,GACfE,EAAmB,OAbzB,4CAxF2B,sBAqB3BrG,qBAAU,WACRsD,EACGgD,IAAI,kBACJ7B,MAAK,SAACC,GAEL+B,GAAY,WACV,OAAO/B,EAAIC,KAAKkC,QAAO,SAACvH,GACtB,OAAOA,EAAQ+B,WAAaA,WAIjCkF,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,QAEf,CAACnF,IAGJrB,qBAAU,WACR,IAGM+G,EAHS,IAAIC,IAAO,uBAAwB,CAChDC,QAAS,QAEYC,UAAU,YAiBjC,OAhBAH,EAAQI,KAAK,YAAY,SAACxC,GAExB8B,EAAY,GAAD,mBAAKnF,GAAL,CAAeqD,QAK5BoC,EAAQI,KAAK,WAAW,SAAUxC,GAChCL,QAAQC,IAAII,GACZ8B,GAAY,SAACW,GACX,OAAOA,EAAaP,QAAO,SAACvH,GAC1B,OAAOA,EAAQsB,MAAQ+D,EAAK/D,aAK3B,WACLmG,EAAQM,aACRN,EAAQO,iBAET,CAAChG,IAEJtB,qBAAU,WACRuH,SAASC,cAAc,cAAcC,UAAYF,SAASC,cACxD,cACAE,eACD,IArEwB,MAwGmB/H,oBAAS,GAxG5B,mBAwGpBgI,EAxGoB,KAwGHC,EAxGG,OAyGejI,mBAAS,IAzGxB,mBAyGpBkI,EAzGoB,KAyGLC,EAzGK,KAgH3B,OACE,yBAAK1H,UAAU,QAEZZ,GACC,kBAAC2F,EAAA,EAAD,CACEC,QAAQ,YACR2C,MAAM,YACN/E,QAvHmB,2CAwHnBgF,UAAW,kBAAC,IAAD,OAJb,UASF,kBAAC,EAAD,CACE3G,SAAUA,EACVC,SAAUA,EACVC,aAzDN,WACE4E,GAAgB3G,IAyDZgC,gBAtBN,SAAuBqG,EAAehG,GACpC+F,EAAmB/F,GACnBiG,EAAiBD,GACjBvD,QAAQC,IAAIsD,MAsBV,yBAAKzH,UAAU,aAEZuH,EACC,yBAAKvH,UAAU,oBACb,uDACA,6BACCkB,EAAS2G,KAAI,SAAC3I,EAAS4I,GACtB,OACE5I,EAAQA,QAAQ6D,cAAcgF,SAASN,IACrC,kBAAC,EAAD,CACEtI,UAAWA,EACXD,QAASA,EACT8I,IAAKF,EACL1I,YAAaA,EACbC,WAAYiH,EACZhH,cAAekH,QAOzBtF,EAAS2G,KAAI,SAAC3I,EAAS4I,GACrB,OACE,kBAAC,EAAD,CACE3I,UAAWA,EACXD,QAASA,EACT8I,IAAKF,EACL1I,YAAaA,EACbC,WAAYiH,EACZhH,cAAekH,QAOzB,kBAAC,EAAD,CAAYrH,UAAWA,EAAW8B,SAAUA,M,4HCJnCgH,OAhKf,YAA8D,IAAvC/H,EAAsC,EAAtCA,KAAMwG,EAAgC,EAAhCA,GAAIwB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAAgB,EAEnC5I,mBAAS,IAF0B,mBAEpD8B,EAFoD,KAE9CC,EAF8C,OAG3B/B,mBAAS,IAHkB,mBAGpDgC,EAHoD,KAG1CC,EAH0C,OAIzBjC,oBAAS,GAJgB,mBAIpD6I,EAJoD,KAIzCC,EAJyC,OAK3B9I,mBAAS,IALkB,mBAKpD+I,EALoD,KAK1CC,EAL0C,OAOnChJ,oBAAS,GAP0B,mBAOpDiJ,EAPoD,KAO9CC,EAP8C,KAarDC,EAAc,WAClBD,GAAQ,IAqCV,SAASE,EAAW7G,GAClBA,EAAEC,iBACFmB,EACG0F,MAAM,iBAAmBlC,EAAI,CAC5BmC,YAAa3I,EACb4I,YAAaR,IAEdjE,MAAK,SAACC,GACLJ,QAAQC,IAAIG,GACZ+D,GAAa,GACbE,EAAY,IAEZJ,OAEDhC,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,GACZiC,GAAa,GACbE,EAAY,OAGlB,OAtDA3I,qBAAU,WACR0B,EAAQU,KAAKC,MAAsB,IAAhBD,KAAKE,WAExBgB,EACGgD,IAAI,kBACJ7B,MAAK,SAACC,GAEL,IAAIyE,EAAezE,EAAIC,KAAKkC,QAC1B,SAACvH,GAAD,OAAaA,EAAQ+B,WAAaf,KAEpCsB,EAAYuH,EAAaA,EAAa1G,OAAS,OAEhD8D,OAAM,SAACC,GAAD,OAASlC,QAAQC,IAAIiC,QAC7B,CAAClG,IA0CF,kBAAC,IAAD,CAAM8I,GAAE,iBAAYtC,GAAM1G,UAAU,QAClC,yBAAKA,UAAU,eACb,kBAACsC,EAAA,EAAD,CAAQC,IAAG,iDAA4ClB,EAA5C,UACX,yBAAKrB,UAAU,oBACb,4BAAKE,GACL,kCACGqB,QADH,IACGA,OADH,EACGA,EAAUrB,KADb,YACqBqB,QADrB,IACqBA,OADrB,EACqBA,EAAUrC,UAGjC,yBAAKc,UAAU,qBACZoI,EACC,kBAAC5F,EAAA,EAAD,CACEC,YAAa,WACX4F,GAAa,GACbE,EAAY,MAGd,0BAAM7F,SAAUiG,GACd,yBAAK3I,UAAU,4BACb,kBAAC2C,EAAA,EAAD,CAAYC,QAAS+F,GACnB,kBAAC,IAAD,OAEF,2BACE7F,KAAK,OACLrC,SAlDlB,SAAsBC,GACpB,IAAMH,EAAQG,EAAMC,OAAOJ,MAC3BgI,EAAYhI,IAiDIA,MAAO+H,EACPtF,WAAS,OAMjB,kBAACL,EAAA,EAAD,CACEC,QAAS,WACPyF,GAAa,KAGf,kBAAC,IAAD,OAGJ,yBAAKrI,UAAU,uBACb,kBAAC2C,EAAA,EAAD,CAAYC,QAxGE,WACtB6F,GAAQ,KAwGE,kBAAC,IAAD,OAGF,kBAACQ,EAAA,EAAD,CAEET,KAAMA,EACNU,QAASR,EACTS,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa3C,GAAG,sBAAhB,0CACsCxG,EADtC,wBAGA,kBAACoJ,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB7C,GAAG,4BAAtB,wFAEkB,gDAFlB,YAEyD,IACvD,4BAAKxG,GAHP,6BAG2C,sCAH3C,iBAIY,6BAJZ,0BAOF,kBAACsJ,EAAA,EAAD,KACE,kBAACzE,EAAA,EAAD,CACEnC,QAAS8F,EACT1D,QAAQ,WACR2C,MAAM,WAHR,YAOA,kBAAC5C,EAAA,EAAD,CACEnC,QAhHhB,WACEM,EACGuG,OAAO,iBAAmB/C,GAC1BrC,MAAK,SAACC,GACLJ,QAAQC,IAAIG,GACZ4D,EAAWxB,GACX+B,GAAQ,MAETtC,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,OAwGFpB,QAAQ,WACR2C,MAAM,YACN3E,WAAS,GAJX,gB,SCjID0G,OA3Bf,YAAgC,IAAXC,EAAU,EAAVA,QAAU,EAEPpK,mBAAS,IAFF,mBAExBqK,EAFwB,KAElBC,EAFkB,KAoB7B,OACE,yBAAKjH,QAjBU,WACf,IAAMkH,EAAWC,OAAO,8BAEpBD,GACF5G,EAAMkB,KAAK,YAAa,CAAElE,KAAM4J,IAAYzF,MAAK,SAACC,GAChDuF,EAAQ,gBAAIvF,EAAIC,OAEfoF,EAAQC,MAEVzD,OAAM,SAAAC,GACLlC,QAAQC,IAAIiC,GACZd,MAAM,6CAMgBtF,UAAU,0BAClC,gD,wCCREgK,I,OAFcC,KAASC,cAXR,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKJT,KAASD,QAChBW,GAAiB,IAAIV,KAASD,KAAKY,mB,oBC4I5BC,OAhJf,YAAiC,IAAd1L,EAAa,EAAbA,UAAa,EAEJI,mBAAS,IAFL,mBAEvBuL,EAFuB,KAEhBC,EAFgB,OAGKxL,oBAAS,GAHd,mBAGvByL,EAHuB,KAGZC,EAHY,KAM9BrL,qBAAU,WACRsD,EACGgD,IAAI,cACJ7B,MAAK,SAACC,GACLyG,EAASzG,EAAIC,SAEd4B,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,QAEf,CAAC0E,EAAMzI,OAAO2I,IAEjB,IAjB8B,EA+BsBzL,oBAAS,GA/B/B,mBA+BvBkC,EA/BuB,KA+BHC,EA/BG,OAgCMnC,mBAAS,IAhCf,mBAgCvBoC,EAhCuB,KAgCXC,EAhCW,KAuC9B,SAASsG,EAAWgD,GAClBH,GAAS,SAACI,GACR,OAAOA,EAAU1E,QAAO,SAACmD,GACvB,OAAOA,EAAKpJ,MAAQ0K,QAK1B,SAAS/C,IACP8C,GAAeD,GAEjB,OACE,yBAAKhL,UAAU,WACb,yBAAKA,UAAU,kBAEb,kBAACsC,EAAA,EAAD,CAAQC,IAAG,OAAEpD,QAAF,IAAEA,OAAF,EAAEA,EAAWiM,SAAUC,IAAI,kBAEtC,yBAAKrL,UAAU,wBACb,kBAAC2C,EAAA,EAAD,CAAaC,QAlCN,WACboH,GACGsB,UACAjH,MAAK,kBAAMH,QAAQC,IAAI,iBACvBgC,OAAM,SAACC,GAAD,OAASlC,QAAQC,IAAIiC,MAC9BmF,OAAOC,SAAW,MA8BV,kBAAC,KAAD,MACA,6CAKL/J,EACC,yBAAKzB,UAAU,eACb,kBAACwC,EAAA,EAAD,CACEC,YAAa,WACXf,GAAsB,GACtBE,EAAc,MAGhB,yBAAK5B,UAAU,kBACb,yBAAKA,UAAU,4BACb,kBAAC2C,EAAA,EAAD,CACEC,QAAS,WACPlB,GAAsB,GACtBE,EAAc,MAGhB,kBAAC,KAAD,OAEF,2BACEkB,KAAK,OACLrC,SAlDK,SAACC,GAAW,IACvBH,EAAUG,EAAMC,OAAhBJ,MACRqB,EAAcrB,EAAMwC,gBAiDNxC,MAAOoB,EACPqB,WAAS,OAKjB,yBAAKhD,UAAU,iBACZ8K,EAAMjD,KAAI,SAAC+B,EAAM9B,GAChB,OACE8B,EAAK1J,KAAK6C,cAAcgF,SAASpG,IAC/B,kBAAC,GAAD,CAAazB,KAAM0J,EAAK1J,KAAMwG,GAAIkD,EAAKpJ,IAAKwH,IAAKF,SAQ3D,yBAAK9H,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,kBAAC2C,EAAA,EAAD,CACEC,QAAS,WACPlB,GAAsB,KAGxB,kBAAC,IAAD,OAEF,2BACEoB,KAAK,OACLgC,YAAY,kBACZlC,QAAS,WACPlB,GAAsB,QAK9B,yBAAK1B,UAAU,iBACb,kBAAC,GAAD,CAAY2J,QA1GN,SAAC8B,GACfV,GAAS,SAAC5I,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBsJ,UAyGfX,EAAMjD,KAAI,SAAC+B,EAAM9B,GAChB,OACE,kBAAC,GAAD,CACE5H,KAAM0J,EAAK1J,KACXwG,GAAIkD,EAAKpJ,IACTwH,IAAKF,EACLI,WAAYA,EACZC,aAAcA,WC/InBuD,I,cAAeC,2BAEfC,GAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,GAAaM,SAAd,CAAuBzL,MAAO0L,qBAAWJ,EAASC,IAC/CC,ICFQG,GACD,WAkBGL,GAfC,SAACM,EAAOC,GAGpB,OAFAlI,QAAQC,IAAIiI,GAEJA,EAAOtJ,MACX,KAAKoJ,GACD,OAAO,6BACAC,GADP,IAEIE,KAAMD,EAAOC,OAGrB,QACI,OAAOF,I,wCCuCJG,OAhDf,YAA6B,IAAZC,EAAW,EAAXA,QAAW,EFDOC,qBAAWd,IEClB,mBACTe,GADS,KACjBJ,KADiB,MA6B1B,OAXAzM,qBAAU,WACRoK,GAAK0C,oBAAmB,SAACL,GACnBA,GACFnI,QAAQC,IAAI,kBAEXoI,EAAQF,IAETnI,QAAQC,IAAI,2BAGf,CAACoI,IAEF,yBAAKvM,UAAU,SACb,yBAAKA,UAAU,mBACb,4BACE,kBAAC,KAAD,MADF,qBAGA,6BACA,yBAAKuC,IAAKoK,KAAMtB,IAAI,SACpB,yBAAKrL,UAAU,cACb,6DAEF,kBAAC+E,EAAA,EAAD,CAAQ3E,KAAK,QAAQwC,QAtCZ,WACboH,GACG4C,gBAAgBjC,IAChBtG,MAAK,SAACC,GACL,IAAI+H,EAAO/H,EAAI+H,KAEfI,EAAS,CACP3J,KAAMoJ,GACNG,KAAMA,OAGTlG,OAAM,SAACC,GACNlC,QAAQC,IAAIiC,QA2BV,uBAAGpG,UAAU,kBADf,0BCHO6M,OAvCf,WAAe,MAGWtN,mBAAS,IAHpB,mBAGN8M,EAHM,KAGAS,EAHA,KAQb,OACE,yBAAK9M,UAAU,OACXqM,EAUA,yBAAKrM,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,GAAD,CAASb,UAAWkN,IACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,KAAK,kBACV,kBAAC,EAAD,CAAM5N,UAAWkN,KAGnB,kBAAC,IAAD,CAAOU,KAAK,KACV,kBAAC,EAAD,UAhBN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,CAAOR,QAXH,SAACF,GACfS,EAAQT,UCDQW,QACW,cAA7BzB,OAAOC,SAASyB,UAEe,UAA7B1B,OAAOC,SAASyB,UAEhB1B,OAAOC,SAASyB,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,CAAevB,aJVS,CAC1BO,KAAM,MISuCR,QAASA,IAClD,kBAAC,GAAD,QAGJ1E,SAASmG,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpJ,MAAK,SAAAqJ,GACJA,EAAaC,gBAEdxH,OAAM,SAAAyH,GACL1J,QAAQ0J,MAAMA,EAAM1O,a,mBEzI5B2O,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.ce00538b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { useStateValue } from \"../StateProvider\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\n// Illustrates each message-- pass in className\nfunction Message({\n  message,\n  userValue,\n  deleteState,\n  addDeleted,\n  removeDeleted,\n}) {\n  // get user from data layer\n  // const [{ user }, dispatch] = useStateValue();\n  const [deletedItemId, setDeletedItemId] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    if (!deleteState) {\n      setDeletedItemId(\"\");\n      setChecked(false);\n    }\n  }, [deletedItemId, deleteState]);\n  // if checked add to array\n  function handleCheck(event) {\n    const { value, checked } = event.target;\n    setChecked(checked);\n    if (checked) {\n      setDeletedItemId(value);\n      addDeleted(value);\n    } else {\n      removeDeleted(value);\n      setDeletedItemId(\"\");\n    }\n  }\n  let time = new Date(message.createdAt);\n\n  return (\n    // use string stuff like this to add functionality\n    // if user logged in === message name then should be green\n    <p\n      className={`chat-message ${\n        userValue?.displayName === message.name && \"chat-reciever\"\n      }`}\n    >\n      {userValue?.displayName === message.name && deleteState && (\n        <Checkbox\n          className={!checked && \"unchecked-color\"}\n          size=\"small\"\n          checkedIcon={<IndeterminateCheckBoxIcon />}\n          inputProps={{ \"aria-label\": \"uncontrolled-checkbox\" }}\n          value={message._id}\n          checked={checked}\n          onChange={handleCheck}\n        />\n      )}\n      <span className=\"chat-name\">{message.name}</span>\n      {message.message}\n      <span className=\"chat-timestamp\">\n        {time.getDay() !== new Date().getDay()\n          ? time.toLocaleString().slice(0, -3)\n          : time.toLocaleTimeString().slice(0, -3)}\n      </span>\n    </p>\n  );\n}\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\n\nfunction ChatHeader({ chatName, messages, handleDelete, searchedMessage }) {\n  // randomized avatar\n  const [seed, setSeed] = useState(\"\");\n  const [lastSeen, setLastSeen] = useState(\"...\");\n  // search bar\n  const [searchBarInitiated, setSearchBarInitiated] = useState(false);\n  const [searchChat, setSearchChat] = useState([]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n    setLastSeen((prevState) => {\n      if (messages === undefined || messages.length === 0) {\n        return prevState;\n      } else {\n        const time = new Date(messages[messages.length - 1].createdAt);\n        return time.getDay() !== new Date().getDay()\n          ? time.toLocaleString().slice(0, -3)\n          : time.toLocaleTimeString().slice(0, -3);\n      }\n    });\n  }, [chatName, messages]);\n\n  function handleSearch() {\n    setSearchBarInitiated(!searchBarInitiated);\n  }\n  // handle input change\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setSearchChat(value.toLowerCase());\n  };\n  // handle submit to searh for message\n  function submitSearch(e) {\n    // pass back and find\n    e.preventDefault();\n    searchedMessage(searchChat, true);\n  }\n\n  return (\n    <div className=\"chat-header\">\n      <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n      {/* Info displayed */}\n      <div className=\"chat-header-info\">\n        <h3>{chatName}</h3>\n        <p>last seen at {lastSeen}</p>\n      </div>\n      {/* icons on header */}\n      <div className=\"chat-header-right\">\n        {searchBarInitiated ? (\n          <ClickAwayListener\n            onClickAway={() => {\n              setSearchBarInitiated(false);\n              setSearchChat(\"\");\n              searchedMessage(searchChat, false);\n            }}\n          >\n            <form onSubmit={submitSearch}>\n              <div className=\"sidebar-search-container\">\n                <IconButton onClick={submitSearch}>\n                  <SearchOutlined />\n                </IconButton>\n                <input\n                  type=\"text\"\n                  onChange={handleChange}\n                  value={searchChat}\n                  autoFocus\n                />\n              </div>\n            </form>\n          </ClickAwayListener>\n        ) : (\n          <div className=\"chat-header-right\">\n            <IconButton onClick={handleSearch}>\n              <SearchOutlined />\n            </IconButton>\n\n            <IconButton\n              onClick={() => {\n                handleDelete();\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatHeader;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  // baseURL: \"http://localhost:5000\",\n  baseURL: \"https://quiet-mesa-25509.herokuapp.com\"\n});\nexport default instance;","import React, { useState } from \"react\";\nimport InsertEmoticon from \"@material-ui/icons/InsertEmoticon\";\nimport { IconButton } from \"@material-ui/core\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport axios from \"../axios\";\n// import { useStateValue } from \"../StateProvider\";\nimport Picker from \"emoji-picker-react\";\nimport DictateButton from \"react-dictate-button\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginLeft: \".5vw\",\n  },\n}));\nfunction ChatFooter({ chatName, userValue }) {\n  // set name to user\n  // const [{ user }, dispatch] = useStateValue();\n\n  const classes = useStyles();\n  const [message, setMessage] = useState(\"\");\n  // handle input change\n  const handleChange = (event) => {\n    const  value  = event.target.value;\n    setMessage(value);\n  };\n  // Async function -- await(pause) until data comes in\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let stringMessage = message.toString();\n    stringMessage = stringMessage.replace(\",\", \" \");\n    console.log(stringMessage);\n    await axios\n      .post(\"/messages/new\", {\n        name: userValue?.displayName,\n        message: stringMessage,\n        chatName: chatName,\n      })\n      .then((res) => console.log(res.data));\n    // return to blank search bar\n    setMessage(\"\");\n  };\n  // Emoji handeling\n  const [emojiClicked, setEmojiClicked] = useState(false);\n \n\n  const onEmojiClick = (event, emojiObject) => {\n    setMessage((prevState) => {\n      return prevState + \" \" + emojiObject.emoji + \" \";\n    });\n  };\n  // handle dictate\n  const handleDictate = ({\n    result: result,\n  }) => {\n    if (result === undefined){\n      console.log(typeof result);\n      alert(\"Error: couldnt recognize speech\")\n    } else {\n        setMessage(result?.transcript);\n    console.log(result?.confidence);\n    }\n  };\n\n  // on dictate progress\n  const handleProgress = () => {\n  }\n  // handle Error\n  const handleError = (event) => {\n    console.log(event);\n  }\n\n  return (\n    <div className=\"chat-footer\">\n      <IconButton onClick={() => setEmojiClicked(!emojiClicked)}>\n        <InsertEmoticon />\n      </IconButton>\n      {emojiClicked && (\n        <Picker onEmojiClick={onEmojiClick} disableSearchBar=\"true\" />\n      )}\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Type a message\"\n          onChange={handleChange}\n          value={message}\n        />\n        {/* <button type=\"submit\">Send</button> */}\n        <Button\n          variant=\"outlined\"\n          // style={{ color: \"green\" }}\n          size=\"small\"\n          className={classes.button}\n          endIcon={<Icon>send</Icon>}\n          type=\"submit\"\n          onClick={handleSubmit}\n        >\n          Send\n        </Button>\n      </form>\n      <DictateButton\n        className=\"my-dictate-button\"\n        grammar=\"#JSGF V1.0; grammar districts; public <district> = Tuen Mun | Yuen Long;\"\n        onDictate={handleDictate}\n        onProgress={handleProgress}\n        onError={handleError}\n      >\n        <MicIcon />\n      </DictateButton>\n    </div>\n  );\n}\n\nexport default ChatFooter;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\nimport Message from \"./Message\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatFooter from \"./ChatFooter\";\nimport Pusher from \"pusher-js\";\nimport axios from \"../axios\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n// can destructure props\nfunction Chat({ userValue }) {\n  // matches chatID route -- useParams- react-router-dom\n  const { chatId } = useParams();\n  const [chatName, setChatName] = useState(\"\");\n  const [deleteState, setDeleteState] = useState(false);\n  const [deletedItemsIds, setDeletedItemsIds] = useState([]);\n  useEffect(() => {\n    if (chatId) {\n      // get specific chat ID\n      axios\n        .get(\"/chat/sync/\" + chatId)\n        .then((res) => {\n          setChatName(res.data.name);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [chatId]);\n  // get all messages\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"/messages/sync\")\n      .then((res) => {\n        //  setMessages(res.data);\n        setMessages(() => {\n          return res.data.filter((message) => {\n            return message.chatName === chatName;\n          });\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [chatName]);\n\n  // pusher sends data send through-- copy paste from pusher\n  useEffect(() => {\n    const pusher = new Pusher(\"903ce939fb72109083a5\", {\n      cluster: \"ap1\",\n    });\n    const channel = pusher.subscribe(\"messages\");\n    channel.bind(\"inserted\", (data) => {\n      // push messages(add messages as input) -- could do prevState way too\n      setMessages([...messages, data]);\n      // setMessages((prevState) => {\n      //   return [...prevState, data];\n      // });\n    });\n    channel.bind(\"deleted\", function (data) {\n      console.log(data);\n      setMessages((prevMessages) => {\n        return prevMessages.filter((message) => {\n          return message._id !== data._id;\n        });\n      });\n    });\n    // cleanup function\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [messages]);\n  // automatically scroll to bottom\n  useEffect(() => {\n    document.querySelector(\".chat-body\").scrollTop = document.querySelector(\n      \".chat-body\"\n    ).scrollHeight;\n  }, []);\n  // handle Delete state\n  function handleDelete() {\n    setDeleteState(!deleteState);\n  }\n  // add deleted items from MEssage componenet\n  function addDeletedItems(item) {\n    setDeletedItemsIds((prevState) => {\n      return [...prevState, item];\n    });\n  }\n  function removesDeletedItems(item) {\n    setDeletedItemsIds((prevState) => {\n      return prevState.filter((id) => {\n        return item !== id;\n      });\n    });\n  }\n  // delete selected messages\n  async function deleteSelected() {\n    console.log(deletedItemsIds);\n    await axios\n      .post(\"/messages/delete\", deletedItemsIds)\n      .then((res) => {\n        console.log(res);\n        setDeleteState(false);\n        setDeletedItemsIds([]);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Refresh before attempting to delete\");\n        setDeleteState(false);\n        setDeletedItemsIds([]);\n      });\n  }\n  const [searchInitiated, setSearchInitiated] = useState(false);\n  const [messageSearch, setMessageSearch] = useState(\"\");\n  // find search message\n  function searchMessage(messageSearch, searchBarInitiated) {\n    setSearchInitiated(searchBarInitiated);\n    setMessageSearch(messageSearch);\n    console.log(messageSearch);\n  }\n  return (\n    <div className=\"chat\">\n      {/* Header of Chat ********/}\n      {deleteState && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={deleteSelected}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      )}\n      <ChatHeader\n        chatName={chatName}\n        messages={messages}\n        handleDelete={handleDelete}\n        searchedMessage={searchMessage}\n      />\n      {/* body of chat showing messages********* */}\n      <div className=\"chat-body\">\n        {/* Message component */}\n        {searchInitiated ? (\n          <div className=\"chat-body-search\">\n            <h1>Matched search messages</h1>\n            <br/>\n            {messages.map((message, index) => {\n              return (\n                message.message.toLowerCase().includes(messageSearch) && (\n                  <Message\n                    userValue={userValue}\n                    message={message}\n                    key={index}\n                    deleteState={deleteState}\n                    addDeleted={addDeletedItems}\n                    removeDeleted={removesDeletedItems}\n                  />\n                )\n              );\n            })}\n          </div>\n        ) : (\n          messages.map((message, index) => {\n            return (\n              <Message\n                userValue={userValue}\n                message={message}\n                key={index}\n                deleteState={deleteState}\n                addDeleted={addDeletedItems}\n                removeDeleted={removesDeletedItems}\n              />\n            );\n          })\n        )}\n      </div>\n      {/* Footer of chat body  */}\n      <ChatFooter userValue={userValue} chatName={chatName} />\n    </div>\n  );\n}\n\nexport default Chat;\n","import { Avatar } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./SidebarChat.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"../axios\";\nimport { IconButton } from \"@material-ui/core\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction SidebarChat({ name, id, deleteChat, showEditChat }) {\n  // randomized avatar\n  const [seed, setSeed] = useState(\"\");\n  const [lastSeen, setLastSeen] = useState(\"\");\n  const [editState, setEditState] = useState(false);\n  const [editChat, setEditChat] = useState(\"\");\n  // Pop ip for deleting chat open\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n    // get last seen message from chat\n    axios\n      .get(\"/messages/sync\")\n      .then((res) => {\n        // filter by chatName\n        let filteredData = res.data.filter(\n          (message) => message.chatName === name\n        );\n        setLastSeen(filteredData[filteredData.length - 1]);\n      })\n      .catch((err) => console.log(err));\n  }, [name]);\n  // delete chat\n  function chatDelete() {\n    axios\n      .delete(\"/chats/delete/\" + id)\n      .then((res) => {\n        console.log(res);\n        deleteChat(id);\n        setOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // change edit value\n  function handleChange(event) {\n    const value = event.target.value;\n    setEditChat(value);\n  }\n  // handle patch request\n  function submitEdit(e) {\n    e.preventDefault();\n    axios\n      .patch(\"/chats/update/\" + id, {\n        oldChatName: name,\n        newChatName: editChat,\n      })\n      .then((res) => {\n        console.log(res);\n        setEditState(false);\n        setEditChat(\"\");\n        // tell sidebar the chat has been edited\n        showEditChat();\n      })\n      .catch((err) => {\n        console.log(err);\n        setEditState(false);\n        setEditChat(\"\");\n      });\n  }\n  return (\n    <Link to={`/chats/${id}`} className=\"link\">\n      <div className=\"sidebarChat\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"sidebarChat-info\">\n          <h2>{name}</h2>\n          <p>\n            {lastSeen?.name}: {lastSeen?.message}\n          </p>\n        </div>\n        <div className=\"sidebarChat-icons\">\n          {editState ? (\n            <ClickAwayListener\n              onClickAway={() => {\n                setEditState(false);\n                setEditChat(\"\");\n              }}\n            >\n              <form onSubmit={submitEdit}>\n                <div className=\"sidebar-search-container\">\n                  <IconButton onClick={submitEdit}>\n                    <EditIcon />\n                  </IconButton>\n                  <input\n                    type=\"text\"\n                    onChange={handleChange}\n                    value={editChat}\n                    autoFocus\n                  />\n                </div>\n              </form>\n            </ClickAwayListener>\n          ) : (\n            <IconButton\n              onClick={() => {\n                setEditState(true);\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n          )}\n          <div className=\"sidebar-chat-delete\">\n            <IconButton onClick={handleClickOpen}>\n              <HighlightOffIcon />\n            </IconButton>\n\n            <Dialog\n              \n              open={open}\n              onClose={handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {`Are you sure you want to delete ${name} Chat for yourself?`}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  Warning chat visbility would be deleted but all the message contents\n                  remain.Click on <strong>add new chat</strong> and type{\" \"}\n                  <em>{name}</em> to redo action. Click on <em>ACCEPT</em> to\n                  delete or <em></em> DISAGREE to go back.\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  variant=\"outlined\"\n                  color=\"primary\"\n                >\n                  Disagree\n                </Button>\n                <Button\n                  onClick={chatDelete}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  autoFocus\n                >\n                  Agree\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default SidebarChat;\n","import React, {useState} from \"react\";\nimport axios from \"../axios\"\n\nfunction AddNewChat({addChat}) {\n\nconst [chat, setChat] = useState({});\n\nconst createChat = () => {\n    const roomName = prompt(\"Please enter name for chat\");\n    // add value to chats\n    if (roomName) {\n      axios.post(\"/chat/new\", { name: roomName }).then((res) => {\n        setChat({...res.data});\n        // call prop and add chat to sidebar\n         addChat(chat);\n      })\n      .catch(err => {\n        console.log(err);\n        alert(\"Cannot create Chat with existing name\")\n      })\n    }\n  };\n  \n  return (\n    <div onClick={createChat} className=\"sidebarChat addNewChat\">\n      <h2>Add a new Chat</h2>\n    </div>\n  );\n}\n\nexport default AddNewChat;\n","import firebase from \"firebase/app\"\nimport \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDJA3-_lSZTP8Iv5jnMGxHchiQfacOn_UU\",\n    authDomain: \"whatsapp-clone-25e68.firebaseapp.com\",\n    databaseURL: \"https://whatsapp-clone-25e68.firebaseio.com\",\n    projectId: \"whatsapp-clone-25e68\",\n    storageBucket: \"whatsapp-clone-25e68.appspot.com\",\n    messagingSenderId: \"277063334087\",\n    appId: \"1:277063334087:web:90583053c7ec6c7b8166e2\",\n    measurementId: \"G-S5Y9JGB06J\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n\n  const auth = firebase.auth();\n  const providerGoogle = new firebase.auth.GoogleAuthProvider();\n\n  export {auth, providerGoogle};\n","import React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport \"@material-ui/core\";\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport SidebarChat from \"./SidebarChat\";\nimport axios from \"../axios\";\nimport AddNewChat from \"./AddNewChat\";\n// import { useStateValue } from \"../StateProvider\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { auth } from \"../firebase\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nfunction Sidebar({ userValue }) {\n  //  store chats\n  const [chats, setChats] = useState([]);\n  const [editedChat,setEditedChat] = useState(false);\n  // const [{user}, dispatch] = useStateValue();\n  // useEffect --> show all chats\n  useEffect(() => {\n    axios\n      .get(\"/chat/sync\")\n      .then((res) => {\n        setChats(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [chats.length,editedChat]);\n  // add chat to array\n  const addChat = (newChat) => {\n    setChats((prevState) => {\n      return [...prevState, newChat];\n    });\n  };\n// logout user\n  const logOut = () => {\n    auth\n      .signOut()\n      .then(() => console.log(\"Signed out\"))\n      .catch((err) => console.log(err));\n    window.location = \"/\";\n  };\n  // Search bar implementation\n  const [searchBarInitiated, setSearchBarInitiated] = useState(false);\n  const [searchChat, setSearchChat] = useState([]);\n  // set search bar search\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setSearchChat(value.toLowerCase());\n  };\n  // delete chat\n  function deleteChat(deletedId) {\n    setChats((prevChats) => {\n      return prevChats.filter((chat) => {\n        return chat._id !== deletedId;\n      });\n    });\n  }\n  // edit chat\n  function showEditChat() {\n    setEditedChat(!editedChat);\n  }\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        {/* avatar */}\n        <Avatar src={userValue?.photoURL} alt=\"display-image\" />\n        {/* right side consiting of icons */}\n        <div className=\"sidebar-header-right\">\n          <IconButton  onClick={logOut}>\n            <ExitToAppIcon />\n            <strong>Logout</strong>\n          </IconButton>\n        </div>\n      </div>\n      {/* Create search bar */}\n      {searchBarInitiated ? (\n        <div className=\"sidebar-fix\">\n          <ClickAwayListener\n            onClickAway={() => {\n              setSearchBarInitiated(false);\n              setSearchChat(\"\");\n            }}\n          >\n            <div className=\"sidebar-search\">\n              <div className=\"sidebar-search-container\">\n                <IconButton\n                  onClick={() => {\n                    setSearchBarInitiated(false);\n                    setSearchChat(\"\");\n                  }}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n                <input\n                  type=\"text\"\n                  onChange={handleChange}\n                  value={searchChat}\n                  autoFocus\n                />\n              </div>\n            </div>\n          </ClickAwayListener>\n          <div className=\"sidebar-chats\">\n            {chats.map((chat, index) => {\n              return (\n                chat.name.toLowerCase().includes(searchChat) && (\n                  <SidebarChat name={chat.name} id={chat._id} key={index} />\n                )\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        /* if side bar search is not initiated */\n        <div className=\"sidebar-fix\">\n          <div className=\"sidebar-search\">\n            <div className=\"sidebar-search-container\">\n              <IconButton\n                onClick={() => {\n                  setSearchBarInitiated(true);\n                }}\n              >\n                <SearchOutlinedIcon />\n              </IconButton>\n              <input\n                type=\"text\"\n                placeholder=\"Search for Chat\"\n                onClick={() => {\n                  setSearchBarInitiated(true);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"sidebar-chats\">\n            <AddNewChat addChat={addChat} />\n            {chats.map((chat, index) => {\n              return (\n                <SidebarChat\n                  name={chat.name}\n                  id={chat._id}\n                  key={index}\n                  deleteChat={deleteChat}\n                  showEditChat={showEditChat}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n      {/* Chats - split into each chat */}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { createContext, useReducer, useContext } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nexport const useStateValue = () => useContext(StateContext);\n\n","export const initialState = {\n  user: null,\n};\n\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user\n            };\n            \n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { Button } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport \"./Login.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { auth, providerGoogle } from \"../firebase\";\nimport { useStateValue } from \"../StateProvider\";\nimport { actionTypes } from \"../reducer\";\nimport logo from \"../images/blackClover.png\";\nimport DeckIcon from \"@material-ui/icons/Deck\";\n\nfunction Login({ getUser }) {\n  const [{ user }, dispatch] = useStateValue();\n  const signIn = () => {\n    auth\n      .signInWithPopup(providerGoogle)\n      .then((res) => {\n        let user = res.user;\n        // getUser(user);\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: user,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n// useEfffect of when auth is changed\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(\"user signed in\");\n        // console.log(user);\n         getUser(user);\n      } else {\n        console.log(\"user not signed in\");\n      }\n    });\n  }, [getUser]);\n  return (\n    <div className=\"login\">\n      <div className=\"login-container\">\n        <h1>\n          <DeckIcon /> Chamber || Chats\n        </h1>\n        <br />\n        <img src={logo} alt=\"logo\" />\n        <div className=\"login-text\">\n          <h3>Enter into the Chamber below</h3>\n        </div>\n        <Button size=\"large\" onClick={signIn}>\n          <i className=\"fab fa-google\"></i>Sign in With Google\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\n// import { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  // get from data layer\n  // const [{ user }] = useStateValue();\n  const [user, setUser] = useState(\"\");\n  const getUser = (user) => {\n    setUser(user);\n    // console.log(user);\n  };\n  return (\n    <div className=\"app\">\n      {!user ? (\n        //<Login getUser={getUser} /> /\n        (\n          <Router>\n            <Route path=\"/\">\n              <Login getUser={getUser} />\n            </Route>\n          </Router>\n        )\n      ) : (\n        <div className=\"app-body\">\n          <Router>\n            <Sidebar userValue={user} />\n            <Switch>\n              <Route path=\"/chats/:chatId\">\n                <Chat userValue={user} />\n              </Route>\n              {/* This path \"/\" has to be at the bottom -- as it will pick it up before as \"/\" is used fr everthing */}\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blackClover.54ebc630.png\";"],"sourceRoot":""}